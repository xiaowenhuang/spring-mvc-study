<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd      
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
  ">
  
  <!-- 激活 @Required @AutoWired,JSR 250's @PostConstruct,@PreDestroy and @Resource等标注 -->
  <context:annotation-config />
  <!-- DispatcherServlet上下文，只搜索@Controller标注的类，不搜索其它标志的类 -->
	<context:component-scan base-package="com.imooc.mvcdemo">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- HandlerMapping,无需配置，Spring MVC可以默认启动 
	DefaultAnnotationHandlerMapping annotation-driven HandlerMapping
	-->
	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven/>
	
	<!-- 静态资源处理，css,js,imgs -->
	<mvc:resources location="/resources/" mapping="/resources/**"/>
	
	<!-- 配置ViewResolver。可以用多个ViewResolver。使用order属性排序。InternalResolverViewResolver放在最后 -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"></property>
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json"></entry>
				<entry key="xml" value="application/xml"></entry>
				<entry key="htm" value="text/html"></entry>
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<!-- JSON view -->
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					
				</bean>
			</list>
		</property>
		<property name="ignoreAcceptHeader" value="true"/>
	</bean>
	
	<!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀    这个模块必须放在页面的最后面-->
	<!--InternalResourceViewResolver：通过prefix和suffix定制文件路径和类型；默认使用InternalResourceView:渲染jsp-->
	<!--另包括：JstlView;VelocityView--> 
	<!--bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/jsps/" p:suffix=".jsp" /-->
	<bean  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/jsps/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		<property name="maxUploadSize" value="209715200"/>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="resolveLazily" value="true"/>
	</bean>
	
  
</beans>